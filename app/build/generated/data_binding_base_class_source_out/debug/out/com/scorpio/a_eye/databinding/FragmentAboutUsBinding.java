// Generated by view binder compiler. Do not edit!
package com.scorpio.a_eye.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.scorpio.a_eye.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAboutUsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppbarMainBinding appbar;

  @NonNull
  public final TextView headingAboutUs;

  @NonNull
  public final TextView headingPrivacyPolicy;

  @NonNull
  public final TextView headingTermsConditions;

  @NonNull
  public final TextView txtAboutUs;

  @NonNull
  public final TextView txtPrivacyPolicy;

  @NonNull
  public final TextView txtTermsConditions;

  private FragmentAboutUsBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppbarMainBinding appbar, @NonNull TextView headingAboutUs,
      @NonNull TextView headingPrivacyPolicy, @NonNull TextView headingTermsConditions,
      @NonNull TextView txtAboutUs, @NonNull TextView txtPrivacyPolicy,
      @NonNull TextView txtTermsConditions) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.headingAboutUs = headingAboutUs;
    this.headingPrivacyPolicy = headingPrivacyPolicy;
    this.headingTermsConditions = headingTermsConditions;
    this.txtAboutUs = txtAboutUs;
    this.txtPrivacyPolicy = txtPrivacyPolicy;
    this.txtTermsConditions = txtTermsConditions;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAboutUsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAboutUsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_about_us, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAboutUsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      View appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }
      AppbarMainBinding binding_appbar = AppbarMainBinding.bind(appbar);

      id = R.id.heading_about_us;
      TextView headingAboutUs = ViewBindings.findChildViewById(rootView, id);
      if (headingAboutUs == null) {
        break missingId;
      }

      id = R.id.heading_privacy_policy;
      TextView headingPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (headingPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.heading_terms_conditions;
      TextView headingTermsConditions = ViewBindings.findChildViewById(rootView, id);
      if (headingTermsConditions == null) {
        break missingId;
      }

      id = R.id.txt_about_us;
      TextView txtAboutUs = ViewBindings.findChildViewById(rootView, id);
      if (txtAboutUs == null) {
        break missingId;
      }

      id = R.id.txt_privacy_policy;
      TextView txtPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (txtPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.txt_terms_conditions;
      TextView txtTermsConditions = ViewBindings.findChildViewById(rootView, id);
      if (txtTermsConditions == null) {
        break missingId;
      }

      return new FragmentAboutUsBinding((ConstraintLayout) rootView, binding_appbar, headingAboutUs,
          headingPrivacyPolicy, headingTermsConditions, txtAboutUs, txtPrivacyPolicy,
          txtTermsConditions);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
