// Generated by view binder compiler. Do not edit!
package com.scorpio.a_eye.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.scorpio.a_eye.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppbarMainBinding appbar;

  @NonNull
  public final ImageView imgAccount;

  @NonNull
  public final ImageView imgSystem;

  @NonNull
  public final RelativeLayout layoutAccount;

  @NonNull
  public final RelativeLayout layoutSystem;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppbarMainBinding appbar, @NonNull ImageView imgAccount,
      @NonNull ImageView imgSystem, @NonNull RelativeLayout layoutAccount,
      @NonNull RelativeLayout layoutSystem) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.imgAccount = imgAccount;
    this.imgSystem = imgSystem;
    this.layoutAccount = layoutAccount;
    this.layoutSystem = layoutSystem;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      View appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }
      AppbarMainBinding binding_appbar = AppbarMainBinding.bind(appbar);

      id = R.id.img_account;
      ImageView imgAccount = ViewBindings.findChildViewById(rootView, id);
      if (imgAccount == null) {
        break missingId;
      }

      id = R.id.img_system;
      ImageView imgSystem = ViewBindings.findChildViewById(rootView, id);
      if (imgSystem == null) {
        break missingId;
      }

      id = R.id.layout_account;
      RelativeLayout layoutAccount = ViewBindings.findChildViewById(rootView, id);
      if (layoutAccount == null) {
        break missingId;
      }

      id = R.id.layout_system;
      RelativeLayout layoutSystem = ViewBindings.findChildViewById(rootView, id);
      if (layoutSystem == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, binding_appbar, imgAccount,
          imgSystem, layoutAccount, layoutSystem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
