// Generated by view binder compiler. Do not edit!
package com.scorpio.a_eye.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.scorpio.a_eye.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bottomBarcode;

  @NonNull
  public final ImageView bottomColors;

  @NonNull
  public final ImageView bottomEmotionDetection;

  @NonNull
  public final ImageView bottomHome;

  @NonNull
  public final ImageView bottomMoney;

  @NonNull
  public final ImageView bottomObstacleView;

  @NonNull
  public final ImageView bottomOcr;

  @NonNull
  public final ImageView bottomPeople;

  @NonNull
  public final ImageView bottomStreetView;

  @NonNull
  public final ImageFilterView btnCapture;

  @NonNull
  public final ImageView btnMenu;

  @NonNull
  public final ImageFilterView buttonMic;

  @NonNull
  public final ImageFilterView cameraRevert;

  @NonNull
  public final HorizontalScrollView horizontalScroll;

  @NonNull
  public final RelativeLayout layout;

  @NonNull
  public final FrameLayout objectsLayout;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final View topBarView;

  private ContentMainBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView bottomBarcode,
      @NonNull ImageView bottomColors, @NonNull ImageView bottomEmotionDetection,
      @NonNull ImageView bottomHome, @NonNull ImageView bottomMoney,
      @NonNull ImageView bottomObstacleView, @NonNull ImageView bottomOcr,
      @NonNull ImageView bottomPeople, @NonNull ImageView bottomStreetView,
      @NonNull ImageFilterView btnCapture, @NonNull ImageView btnMenu,
      @NonNull ImageFilterView buttonMic, @NonNull ImageFilterView cameraRevert,
      @NonNull HorizontalScrollView horizontalScroll, @NonNull RelativeLayout layout,
      @NonNull FrameLayout objectsLayout, @NonNull PreviewView previewView,
      @NonNull View topBarView) {
    this.rootView = rootView;
    this.bottomBarcode = bottomBarcode;
    this.bottomColors = bottomColors;
    this.bottomEmotionDetection = bottomEmotionDetection;
    this.bottomHome = bottomHome;
    this.bottomMoney = bottomMoney;
    this.bottomObstacleView = bottomObstacleView;
    this.bottomOcr = bottomOcr;
    this.bottomPeople = bottomPeople;
    this.bottomStreetView = bottomStreetView;
    this.btnCapture = btnCapture;
    this.btnMenu = btnMenu;
    this.buttonMic = buttonMic;
    this.cameraRevert = cameraRevert;
    this.horizontalScroll = horizontalScroll;
    this.layout = layout;
    this.objectsLayout = objectsLayout;
    this.previewView = previewView;
    this.topBarView = topBarView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_barcode;
      ImageView bottomBarcode = ViewBindings.findChildViewById(rootView, id);
      if (bottomBarcode == null) {
        break missingId;
      }

      id = R.id.bottom_colors;
      ImageView bottomColors = ViewBindings.findChildViewById(rootView, id);
      if (bottomColors == null) {
        break missingId;
      }

      id = R.id.bottom_emotion_detection;
      ImageView bottomEmotionDetection = ViewBindings.findChildViewById(rootView, id);
      if (bottomEmotionDetection == null) {
        break missingId;
      }

      id = R.id.bottom_home;
      ImageView bottomHome = ViewBindings.findChildViewById(rootView, id);
      if (bottomHome == null) {
        break missingId;
      }

      id = R.id.bottom_money;
      ImageView bottomMoney = ViewBindings.findChildViewById(rootView, id);
      if (bottomMoney == null) {
        break missingId;
      }

      id = R.id.bottom_obstacle_view;
      ImageView bottomObstacleView = ViewBindings.findChildViewById(rootView, id);
      if (bottomObstacleView == null) {
        break missingId;
      }

      id = R.id.bottom_ocr;
      ImageView bottomOcr = ViewBindings.findChildViewById(rootView, id);
      if (bottomOcr == null) {
        break missingId;
      }

      id = R.id.bottom_people;
      ImageView bottomPeople = ViewBindings.findChildViewById(rootView, id);
      if (bottomPeople == null) {
        break missingId;
      }

      id = R.id.bottom_street_view;
      ImageView bottomStreetView = ViewBindings.findChildViewById(rootView, id);
      if (bottomStreetView == null) {
        break missingId;
      }

      id = R.id.btn_capture;
      ImageFilterView btnCapture = ViewBindings.findChildViewById(rootView, id);
      if (btnCapture == null) {
        break missingId;
      }

      id = R.id.btn_menu;
      ImageView btnMenu = ViewBindings.findChildViewById(rootView, id);
      if (btnMenu == null) {
        break missingId;
      }

      id = R.id.button_mic;
      ImageFilterView buttonMic = ViewBindings.findChildViewById(rootView, id);
      if (buttonMic == null) {
        break missingId;
      }

      id = R.id.camera_revert;
      ImageFilterView cameraRevert = ViewBindings.findChildViewById(rootView, id);
      if (cameraRevert == null) {
        break missingId;
      }

      id = R.id.horizontal_scroll;
      HorizontalScrollView horizontalScroll = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScroll == null) {
        break missingId;
      }

      id = R.id.layout;
      RelativeLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.objects_layout;
      FrameLayout objectsLayout = ViewBindings.findChildViewById(rootView, id);
      if (objectsLayout == null) {
        break missingId;
      }

      id = R.id.preview_view;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.top_bar_view;
      View topBarView = ViewBindings.findChildViewById(rootView, id);
      if (topBarView == null) {
        break missingId;
      }

      return new ContentMainBinding((ConstraintLayout) rootView, bottomBarcode, bottomColors,
          bottomEmotionDetection, bottomHome, bottomMoney, bottomObstacleView, bottomOcr,
          bottomPeople, bottomStreetView, btnCapture, btnMenu, buttonMic, cameraRevert,
          horizontalScroll, layout, objectsLayout, previewView, topBarView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
